# A simple local MQTT broker for Horizon servcies to use

# ----------------------------------------------------------------------------

# You must always use the Horizon name for architecture (`hzn architecture`)
export ARCH ?= $(shell hzn architecture)

# Import variables from hzn.json (file is generated by last target in this file)
-include .hzn.json.tmp.mk

# ----------------------------------------------------------------------------

# Build the docker container
build: check_id
	docker build -t $(DOCKERHUB_ID)/$(SERVICE_NAME)_$(ARCH):$(SERVICE_VERSION) -f ./Dockerfile.$(ARCH) .

# Push the docker container to the DockerHub registry
push: check_id
	docker push $(DOCKERHUB_ID)/$(SERVICE_NAME)_$(ARCH):$(SERVICE_VERSION)

# Publish a Horizon service (per service.json) and pull image to get its sha256
publish-service: check_id
	hzn exchange service publish -f service.json --pull-image

# Remove the local container image
clean: check_id
	-docker rm -f $(SERVICE_NAME)
	-docker rmi $(DOCKERHUB_ID)/$(SERVICE_NAME)_$(ARCH):$(SERVICE_VERSION) 2>/dev/null || :
	rm -f .hzn.json.tmp.mk

# ----------------------------------------------------------------------------

check_id:
	@if [ -z "${DOCKERHUB_ID}" ]; \
          then { echo "***** ERROR: \"DOCKERHUB_ID\" is not set!"; exit 1; }; \
          else echo "  NOTE: Using DockerHubID: \"${DOCKERHUB_ID}\""; \
        fi

dev: check_id
	-docker network create mqtt-net 2>/dev/null || :
	-docker rm -f $(SERVICE_NAME) 2>/dev/null || :
	docker run -it -e CAM_DEVICE="V4L2:/dev/video0" --privileged --name $(SERVICE_NAME) --network=mqtt-net --net-alias=$(SERVICE_NAME) $(DOCKERHUB_ID)/$(SERVICE_NAME)_$(ARCH):$(SERVICE_VERSION) bash

test: check_id
	-docker network create mqtt-net 2>/dev/null || :
	-docker rm -f $(SERVICE_NAME) 2>/dev/null || :
	docker run --rm -d -p 8888:80 -e CAM_DEVICE="V4L2:/dev/video0" --privileged --name $(SERVICE_NAME) --network=mqtt-net --net-alias=$(SERVICE_NAME) $(DOCKERHUB_ID)/$(SERVICE_NAME)_$(ARCH):$(SERVICE_VERSION)

test-get:
	curl -sS localhost:8888 | jq --raw-output --join-output '.cam.image' | base64 -d > foo.jpg
test-end:
	-docker rm -f $(SERVICE_NAME)

# ----------------------------------------------------------------------------

# This imports the variables from hzn.json
.hzn.json.tmp.mk: hzn.json
	@ hzn util configconv -f $< > $@

