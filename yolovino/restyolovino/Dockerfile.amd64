FROM ubuntu:18.04
ENV http_proxy $HTTP_PROXY
ENV https_proxy $HTTP_PROXY
USER root
WORKDIR /
RUN useradd -ms /bin/bash openvino && \
    chown openvino -R /home/openvino
ARG INSTALL_DIR=/opt/intel/openvino
ARG DEPENDENCIES="autoconf \
                  automake \
                  build-essential \
                  cmake \
                  cpio \
                  curl \
                  gnupg2 \
		  wget \
                  libdrm2 \
                  libglib2.0-0 \
                  lsb-release \
                  libgtk-3-0 \
                  libtool \
                  python3-pip \
                  python3-setuptools \
                  python3-dev \
                  udev \
                  libboost-filesystem1.65-dev \
                  libboost-thread1.65-dev \
                  libjson-c3 libxxf86vm-dev \
                  unzip"
#    apt-get install -y --no-install-recommends ${DEPENDENCIES} && \
RUN apt-get update && \
    apt-get install -y ${DEPENDENCIES} && \
    rm -rf /var/lib/apt/lists/*

ARG DOWNLOAD_LINK=http://registrationcenter-download.intel.com/akdlm/irc_nas/16612/l_openvino_toolkit_p_2020.2.120.tgz


WORKDIR /tmp

RUN curl -LOJ "${DOWNLOAD_LINK}" && \
    tar -xzf ./*.tgz && \
    cd l_openvino_toolkit* && \
    sed -i 's/decline/accept/g' silent.cfg && \
    ./install.sh -s silent.cfg && \
    rm -rf /tmp/* && \
    $INSTALL_DIR/install_dependencies/install_openvino_dependencies.sh

RUN echo "source $INSTALL_DIR/bin/setupvars.sh" >> /etc/bash.bashrc

# ==============================================================================
# Build Inference Engine samples
# ------------------------------------------------------------------------------
RUN mkdir $INSTALL_DIR/deployment_tools/inference_engine/samples/cpp/build && \
    cd $INSTALL_DIR/deployment_tools/inference_engine/samples/cpp/build && \
    /bin/bash -c "source $INSTALL_DIR/bin/setupvars.sh && cmake .. && make -j4"

# ==============================================================================
# Build Inference Engine demos 
# ------------------------------------------------------------------------------
RUN mkdir $INSTALL_DIR/deployment_tools/inference_engine/demos/build && \
    cd $INSTALL_DIR/deployment_tools/inference_engine/demos/build && \
    /bin/bash -c "source $INSTALL_DIR/bin/setupvars.sh && cmake .. && make -j4"

RUN pip3 install pyyaml requests numpy progress

RUN python3 $INSTALL_DIR/deployment_tools/tools/model_downloader/downloader.py --name yolo-v2-tiny-ava-0001

# [GD] Model config, weights, and labels
COPY yolo-v2-tiny-ava-0001.xml /
COPY yolo-v2-tiny-ava-0001.bin /
COPY yolo-v2-tiny-ava-0001.labels /

# [GD] My example image
COPY mock.jpg /

USER root
CMD /bin/bash -c "source /opt/intel/openvino/bin/setupvars.sh && python3 /opt/intel/openvino_2020.2.120/deployment_tools/tools/benchmark_tool/benchmark_app.py -m /tmp/intel/yolo-v2-tiny-ava-0001/FP16/yolo-v2-tiny-ava-0001.xml -d HDDL"

